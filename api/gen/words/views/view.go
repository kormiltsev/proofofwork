// Code generated by goa v3.16.2, DO NOT EDIT.
//
// words views
//
// Command:
// $ goa gen github.com/kormiltsev/proofofwork/api/design -o ./api/

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// WordsResult is the viewed result type that is projected based on a view.
type WordsResult struct {
	// Type to project
	Projected *WordsResultView
	// View to render
	View string
}

// WordsTask is the viewed result type that is projected based on a view.
type WordsTask struct {
	// Type to project
	Projected *WordsTaskView
	// View to render
	View string
}

// WordsResultView is a type that runs validations on a projected type.
type WordsResultView struct {
	// Words of wisdome
	Quote *string
}

// WordsTaskView is a type that runs validations on a projected type.
type WordsTaskView struct {
	// Previous hash
	Hash *string
	// Target difficulty
	Difficulty *int
}

var (
	// WordsResultMap is a map indexing the attribute names of WordsResult by view
	// name.
	WordsResultMap = map[string][]string{
		"default": {
			"quote",
		},
	}
	// WordsTaskMap is a map indexing the attribute names of WordsTask by view name.
	WordsTaskMap = map[string][]string{
		"default": {
			"hash",
			"difficulty",
		},
	}
)

// ValidateWordsResult runs the validations defined on the viewed result type
// WordsResult.
func ValidateWordsResult(result *WordsResult) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateWordsResultView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateWordsTask runs the validations defined on the viewed result type
// WordsTask.
func ValidateWordsTask(result *WordsTask) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateWordsTaskView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateWordsResultView runs the validations defined on WordsResultView
// using the "default" view.
func ValidateWordsResultView(result *WordsResultView) (err error) {

	return
}

// ValidateWordsTaskView runs the validations defined on WordsTaskView using
// the "default" view.
func ValidateWordsTaskView(result *WordsTaskView) (err error) {

	return
}
