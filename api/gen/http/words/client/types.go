// Code generated by goa v3.16.2, DO NOT EDIT.
//
// words HTTP client types
//
// Command:
// $ goa gen github.com/kormiltsev/proofofwork/api/design -o ./api/

package client

import (
	words "github.com/kormiltsev/proofofwork/api/gen/words"
	wordsviews "github.com/kormiltsev/proofofwork/api/gen/words/views"
	goa "goa.design/goa/v3/pkg"
)

// WordsRequestBody is the type of the "words" service "words" endpoint HTTP
// request body.
type WordsRequestBody struct {
	// Solution block
	Solution *string `form:"solution,omitempty" json:"solution,omitempty" xml:"solution,omitempty"`
}

// WordsOKResponseBody is the type of the "words" service "words" endpoint HTTP
// response body.
type WordsOKResponseBody struct {
	// Words of wisdome
	Quote *string `form:"quote,omitempty" json:"quote,omitempty" xml:"quote,omitempty"`
}

// RequestOKResponseBody is the type of the "words" service "request" endpoint
// HTTP response body.
type RequestOKResponseBody struct {
	// Previous hash
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
	// Target difficulty
	Difficulty *int `form:"difficulty,omitempty" json:"difficulty,omitempty" xml:"difficulty,omitempty"`
}

// WordsBadRequestResponseBody is the type of the "words" service "words"
// endpoint HTTP response body for the "bad_request" error.
type WordsBadRequestResponseBody struct {
	// Key to select a localized message
	MsgCode *string `form:"msgCode,omitempty" json:"msgCode,omitempty" xml:"msgCode,omitempty"`
	// Detailed error message
	Msg *string `form:"msg,omitempty" json:"msg,omitempty" xml:"msg,omitempty"`
	// Message attributes
	Attributes any `form:"attributes,omitempty" json:"attributes,omitempty" xml:"attributes,omitempty"`
}

// WordsInternalResponseBody is the type of the "words" service "words"
// endpoint HTTP response body for the "internal" error.
type WordsInternalResponseBody struct {
	// Key to select a localized message
	MsgCode *string `form:"msgCode,omitempty" json:"msgCode,omitempty" xml:"msgCode,omitempty"`
	// Detailed error message
	Msg *string `form:"msg,omitempty" json:"msg,omitempty" xml:"msg,omitempty"`
	// Message attributes
	Attributes any `form:"attributes,omitempty" json:"attributes,omitempty" xml:"attributes,omitempty"`
}

// RequestBadRequestResponseBody is the type of the "words" service "request"
// endpoint HTTP response body for the "bad_request" error.
type RequestBadRequestResponseBody struct {
	// Key to select a localized message
	MsgCode *string `form:"msgCode,omitempty" json:"msgCode,omitempty" xml:"msgCode,omitempty"`
	// Detailed error message
	Msg *string `form:"msg,omitempty" json:"msg,omitempty" xml:"msg,omitempty"`
	// Message attributes
	Attributes any `form:"attributes,omitempty" json:"attributes,omitempty" xml:"attributes,omitempty"`
}

// RequestInternalResponseBody is the type of the "words" service "request"
// endpoint HTTP response body for the "internal" error.
type RequestInternalResponseBody struct {
	// Key to select a localized message
	MsgCode *string `form:"msgCode,omitempty" json:"msgCode,omitempty" xml:"msgCode,omitempty"`
	// Detailed error message
	Msg *string `form:"msg,omitempty" json:"msg,omitempty" xml:"msg,omitempty"`
	// Message attributes
	Attributes any `form:"attributes,omitempty" json:"attributes,omitempty" xml:"attributes,omitempty"`
}

// WordsForbiddenResponseBody is used to define fields on response body types.
type WordsForbiddenResponseBody struct {
	// Words of wisdome
	Quote *string `form:"quote,omitempty" json:"quote,omitempty" xml:"quote,omitempty"`
}

// RequestUnauthorizedResponseBody is used to define fields on response body
// types.
type RequestUnauthorizedResponseBody struct {
	// Previous hash
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
	// Target difficulty
	Difficulty *int `form:"difficulty,omitempty" json:"difficulty,omitempty" xml:"difficulty,omitempty"`
}

// RequestForbiddenResponseBody is used to define fields on response body types.
type RequestForbiddenResponseBody struct {
	// Previous hash
	Hash *string `form:"hash,omitempty" json:"hash,omitempty" xml:"hash,omitempty"`
	// Target difficulty
	Difficulty *int `form:"difficulty,omitempty" json:"difficulty,omitempty" xml:"difficulty,omitempty"`
}

// NewWordsRequestBody builds the HTTP request body from the payload of the
// "words" endpoint of the "words" service.
func NewWordsRequestBody(p *words.WordsPayload) *WordsRequestBody {
	body := &WordsRequestBody{
		Solution: p.Solution,
	}
	return body
}

// NewWordsResultViewOK builds a "words" service "words" endpoint result from a
// HTTP "OK" response.
func NewWordsResultViewOK(body *WordsOKResponseBody) *wordsviews.WordsResultView {
	v := &wordsviews.WordsResultView{
		Quote: body.Quote,
	}

	return v
}

// NewWordsBadRequest builds a words service words endpoint bad_request error.
func NewWordsBadRequest(body *WordsBadRequestResponseBody) *words.BadRequestError {
	v := &words.BadRequestError{
		MsgCode:    *body.MsgCode,
		Msg:        *body.Msg,
		Attributes: body.Attributes,
	}

	return v
}

// NewWordsInternal builds a words service words endpoint internal error.
func NewWordsInternal(body *WordsInternalResponseBody) *words.InternalError {
	v := &words.InternalError{
		MsgCode:    *body.MsgCode,
		Msg:        *body.Msg,
		Attributes: body.Attributes,
	}

	return v
}

// NewRequestWordsTaskOK builds a "words" service "request" endpoint result
// from a HTTP "OK" response.
func NewRequestWordsTaskOK(body *RequestOKResponseBody) *wordsviews.WordsTaskView {
	v := &wordsviews.WordsTaskView{
		Hash:       body.Hash,
		Difficulty: body.Difficulty,
	}

	return v
}

// NewRequestBadRequest builds a words service request endpoint bad_request
// error.
func NewRequestBadRequest(body *RequestBadRequestResponseBody) *words.BadRequestError {
	v := &words.BadRequestError{
		MsgCode:    *body.MsgCode,
		Msg:        *body.Msg,
		Attributes: body.Attributes,
	}

	return v
}

// NewRequestInternal builds a words service request endpoint internal error.
func NewRequestInternal(body *RequestInternalResponseBody) *words.InternalError {
	v := &words.InternalError{
		MsgCode:    *body.MsgCode,
		Msg:        *body.Msg,
		Attributes: body.Attributes,
	}

	return v
}

// ValidateWordsBadRequestResponseBody runs the validations defined on
// words_bad_request_response_body
func ValidateWordsBadRequestResponseBody(body *WordsBadRequestResponseBody) (err error) {
	if body.Msg == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msg", "body"))
	}
	if body.MsgCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msgCode", "body"))
	}
	return
}

// ValidateWordsInternalResponseBody runs the validations defined on
// words_internal_response_body
func ValidateWordsInternalResponseBody(body *WordsInternalResponseBody) (err error) {
	if body.Msg == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msg", "body"))
	}
	if body.MsgCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msgCode", "body"))
	}
	return
}

// ValidateRequestBadRequestResponseBody runs the validations defined on
// request_bad_request_response_body
func ValidateRequestBadRequestResponseBody(body *RequestBadRequestResponseBody) (err error) {
	if body.Msg == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msg", "body"))
	}
	if body.MsgCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msgCode", "body"))
	}
	return
}

// ValidateRequestInternalResponseBody runs the validations defined on
// request_internal_response_body
func ValidateRequestInternalResponseBody(body *RequestInternalResponseBody) (err error) {
	if body.Msg == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msg", "body"))
	}
	if body.MsgCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("msgCode", "body"))
	}
	return
}
